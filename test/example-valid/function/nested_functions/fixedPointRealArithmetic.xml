<unit>
  <fn><name>q</name><args/><body><num>14</num><return/></body></fn>
  <fn>
    <name>power</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <num>1</num>
      <assign_do/>
      <while>
        <cond><local>1</local><num>0</num><op>gt</op></cond>
        <body>
          <addr_local>2</addr_local>
          <local>2</local>
          <local>0</local>
          <op>mul</op>
          <assign_do/>
          <addr_local>1</addr_local>
          <local>1</local>
          <num>1</num>
          <op>sub</op>
          <assign_do/>
        </body>
      </while>
      <local>2</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>f</name>
    <args/>
    <body>
      <addr_local>0</addr_local>
      <call_func><name>q</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>1</addr_local>
      <num>2</num>
      <local>0</local>
      <call_func><name>power</name><nargs>2</nargs></call_func>
      <assign_do/>
      <local>1</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>intToFixedPoint</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <call_func><name>f</name><nargs>0</nargs></call_func>
      <assign_do/>
      <local>0</local>
      <local>1</local>
      <op>mul</op>
      <return/>
    </body>
  </fn>
  <fn>
    <name>fixedPointToIntRoundDown</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <call_func><name>f</name><nargs>0</nargs></call_func>
      <assign_do/>
      <local>0</local>
      <local>1</local>
      <op>div</op>
      <return/>
    </body>
  </fn>
  <fn>
    <name>fixedPointToIntRoundNear</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <call_func><name>f</name><nargs>0</nargs></call_func>
      <assign_do/>
      <if>
        <cond><local>0</local><num>0</num><op>ge</op></cond>
        <when>
          <local>0</local>
          <local>1</local>
          <num>2</num>
          <op>div</op>
          <op>add</op>
          <local>1</local>
          <op>div</op>
          <return/>
        </when>
        <else>
          <local>0</local>
          <local>1</local>
          <num>2</num>
          <op>div</op>
          <op>sub</op>
          <local>1</local>
          <op>div</op>
          <return/>
        </else>
      </if>
    </body>
  </fn>
  <fn>
    <name>add</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body><local>0</local><local>1</local><op>add</op><return/></body>
  </fn>
  <fn>
    <name>subtract</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body><local>0</local><local>1</local><op>sub</op><return/></body>
  </fn>
  <fn>
    <name>addByInt</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <call_func><name>f</name><nargs>0</nargs></call_func>
      <assign_do/>
      <local>0</local>
      <local>1</local>
      <local>2</local>
      <op>mul</op>
      <op>add</op>
      <return/>
    </body>
  </fn>
  <fn>
    <name>subtractByInt</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <call_func><name>f</name><nargs>0</nargs></call_func>
      <assign_do/>
      <local>0</local>
      <local>1</local>
      <local>2</local>
      <op>mul</op>
      <op>sub</op>
      <return/>
    </body>
  </fn>
  <fn>
    <name>multiply</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <call_func><name>f</name><nargs>0</nargs></call_func>
      <assign_do/>
      <local>0</local>
      <local>1</local>
      <op>mul</op>
      <local>2</local>
      <op>div</op>
      <return/>
    </body>
  </fn>
  <fn>
    <name>multiplyByInt</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body><local>0</local><local>1</local><op>mul</op><return/></body>
  </fn>
  <fn>
    <name>divide</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <call_func><name>f</name><nargs>0</nargs></call_func>
      <assign_do/>
      <local>0</local>
      <local>2</local>
      <op>mul</op>
      <local>1</local>
      <op>div</op>
      <return/>
    </body>
  </fn>
  <fn>
    <name>divideByInt</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body><local>0</local><local>1</local><op>div</op><return/></body>
  </fn>
  <main>
    <addr_local>0</addr_local>
    <num>10</num>
    <assign_do/>
    <addr_local>1</addr_local>
    <num>3</num>
    <assign_do/>
    <str>"Using fixed-point real: "</str>
    <print><kind>str</kind><newline>false</newline></print>
    <local>0</local>
    <print><kind>i32</kind><newline>false</newline></print>
    <str>" / "</str>
    <print><kind>str</kind><newline>false</newline></print>
    <local>1</local>
    <print><kind>i32</kind><newline>false</newline></print>
    <str>" * "</str>
    <print><kind>str</kind><newline>false</newline></print>
    <local>1</local>
    <print><kind>i32</kind><newline>false</newline></print>
    <str>" = "</str>
    <print><kind>str</kind><newline>false</newline></print>
    <addr_local>2</addr_local>
    <local>0</local>
    <call_func><name>intToFixedPoint</name><nargs>1</nargs></call_func>
    <assign_do/>
    <addr_local>2</addr_local>
    <local>2</local>
    <local>1</local>
    <call_func><name>divideByInt</name><nargs>2</nargs></call_func>
    <assign_do/>
    <addr_local>2</addr_local>
    <local>2</local>
    <local>1</local>
    <call_func><name>multiplyByInt</name><nargs>2</nargs></call_func>
    <assign_do/>
    <addr_local>3</addr_local>
    <local>2</local>
    <call_func><name>fixedPointToIntRoundNear</name><nargs>1</nargs></call_func>
    <assign_do/>
    <local>3</local>
    <print><kind>i32</kind><newline>true</newline></print>
  </main>
</unit>