<unit>
  <fn>
    <name>chooseSymbol</name>
    <args/>
    <body>
      <str>"========= Tic Tac Toe ================"</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"=  Because we know you want to win   ="</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"======================================"</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"=                                    ="</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"= Who would you like to be?          ="</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"=   x  (play first)                  ="</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"=   o  (play second)                 ="</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"=   q  (quit)                        ="</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"=                                    ="</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"======================================"</str>
      <print><kind>str</kind><newline>true</newline></print>
      <addr_local>0</addr_local>
      <char>'\0'</char>
      <assign_do/>
      <while>
        <cond><local>0</local><char>'\0'</char><op>eq</op></cond>
        <body>
          <str>"Which symbol you would like to choose: "</str>
          <print><kind>str</kind><newline>false</newline></print>
          <addr_local>1</addr_local>
          <char>'\0'</char>
          <assign_do/>
          <addr_local>1</addr_local>
          <read><ty>char</ty></read>
          <if>
            <cond>
              <local>1</local>
              <char>'x'</char>
              <op>eq</op>
              <local>1</local>
              <char>'X'</char>
              <op>eq</op>
              <op>or</op>
            </cond>
            <when><addr_local>0</addr_local><char>'x'</char><assign_do/></when>
            <else>
              <if>
                <cond>
                  <local>1</local>
                  <char>'o'</char>
                  <op>eq</op>
                  <local>1</local>
                  <char>'O'</char>
                  <op>eq</op>
                  <op>or</op>
                </cond>
                <when><addr_local>0</addr_local><char>'o'</char><assign_do/></when>
                <else>
                  <if>
                    <cond>
                      <local>1</local>
                      <char>'q'</char>
                      <op>eq</op>
                      <local>1</local>
                      <char>'Q'</char>
                      <op>eq</op>
                      <op>or</op>
                    </cond>
                    <when>
                      <str>"Goodbye safety."</str>
                      <print><kind>str</kind><newline>true</newline></print>
                      <num>0</num>
                      <exit/>
                    </when>
                    <else>
                      <str>"Invalid symbol: "</str>
                      <print><kind>str</kind><newline>false</newline></print>
                      <local>1</local>
                      <print><kind>char</kind><newline>true</newline></print>
                      <str>"Please try again."</str>
                      <print><kind>str</kind><newline>true</newline></print>
                    </else>
                  </if>
                </else>
              </if>
            </else>
          </if>
        </body>
      </while>
      <str>"You have chosen: "</str>
      <print><kind>str</kind><newline>false</newline></print>
      <local>0</local>
      <print><kind>char</kind><newline>true</newline></print>
      <local>0</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>printBoard</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <str>" 1 2 3"</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"1"</str>
      <print><kind>str</kind><newline>false</newline></print>
      <addr_local>5</addr_local>
      <local>2</local>
      <call_func><name>printRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <str>" -+-+-"</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"2"</str>
      <print><kind>str</kind><newline>false</newline></print>
      <addr_local>5</addr_local>
      <local>3</local>
      <call_func><name>printRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <str>" -+-+-"</str>
      <print><kind>str</kind><newline>true</newline></print>
      <str>"3"</str>
      <print><kind>str</kind><newline>false</newline></print>
      <addr_local>5</addr_local>
      <local>4</local>
      <call_func><name>printRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <str>""</str>
      <print><kind>str</kind><newline>true</newline></print>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>printRow</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>2</local>
      <call_func><name>printCell</name><nargs>1</nargs></call_func>
      <assign_do/>
      <char>'|'</char>
      <print><kind>char</kind><newline>false</newline></print>
      <addr_local>5</addr_local>
      <local>3</local>
      <call_func><name>printCell</name><nargs>1</nargs></call_func>
      <assign_do/>
      <char>'|'</char>
      <print><kind>char</kind><newline>false</newline></print>
      <addr_local>5</addr_local>
      <local>4</local>
      <call_func><name>printCell</name><nargs>1</nargs></call_func>
      <assign_do/>
      <str>""</str>
      <print><kind>str</kind><newline>true</newline></print>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>printCell</name>
    <args><arg>0</arg></args>
    <body>
      <if>
        <cond><local>0</local><char>'\0'</char><op>eq</op></cond>
        <when>
          <char>' '</char>
          <print><kind>char</kind><newline>false</newline></print>
        </when>
        <else>
          <local>0</local>
          <print><kind>char</kind><newline>false</newline></print>
        </else>
      </if>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>askForAMoveHuman</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <false/>
      <assign_do/>
      <addr_local>3</addr_local>
      <num>0</num>
      <assign_do/>
      <addr_local>4</addr_local>
      <num>0</num>
      <assign_do/>
      <while>
        <cond><local>2</local><not/></cond>
        <body>
          <str>"What is your next move?"</str>
          <print><kind>str</kind><newline>true</newline></print>
          <str>" row (1-3): "</str>
          <print><kind>str</kind><newline>false</newline></print>
          <addr_local>3</addr_local>
          <read><ty>int</ty></read>
          <str>" column (1-3): "</str>
          <print><kind>str</kind><newline>false</newline></print>
          <addr_local>4</addr_local>
          <read><ty>int</ty></read>
          <addr_local>2</addr_local>
          <local>0</local>
          <local>3</local>
          <local>4</local>
          <call_func><name>validateMove</name><nargs>3</nargs></call_func>
          <assign_do/>
          <if>
            <cond><local>2</local></cond>
            <when>
              <str>""</str>
              <print><kind>str</kind><newline>true</newline></print>
              <addr_local>1</addr_local>
              <num>0</num>
              <addr_array/>
              <local>3</local>
              <assign_do/>
              <addr_local>1</addr_local>
              <num>1</num>
              <addr_array/>
              <local>4</local>
              <assign_do/>
              <true/>
              <return/>
            </when>
            <else>
              <str>"Your move is invalid. Please try again."</str>
              <print><kind>str</kind><newline>true</newline></print>
            </else>
          </if>
        </body>
      </while>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>validateMove</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <if>
        <cond>
          <num>1</num>
          <local>1</local>
          <op>le</op>
          <local>1</local>
          <num>3</num>
          <op>le</op>
          <op>and</op>
          <num>1</num>
          <local>2</local>
          <op>le</op>
          <op>and</op>
          <local>2</local>
          <num>3</num>
          <op>le</op>
          <op>and</op>
        </cond>
        <when>
          <addr_local>3</addr_local>
          <local>0</local>
          <local>1</local>
          <local>2</local>
          <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
          <assign_do/>
          <local>3</local>
          <char>'\0'</char>
          <op>eq</op>
          <return/>
        </when>
        <else><false/><return/></else>
      </if>
    </body>
  </fn>
  <fn>
    <name>notifyMoveHuman</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg><arg>3</arg><arg>4</arg></args>
    <body>
      <str>"The AI played at row "</str>
      <print><kind>str</kind><newline>false</newline></print>
      <local>3</local>
      <print><kind>i32</kind><newline>false</newline></print>
      <str>" column "</str>
      <print><kind>str</kind><newline>false</newline></print>
      <local>4</local>
      <print><kind>i32</kind><newline>true</newline></print>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>initAI</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <null/>
      <newpair/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>0</local>
      <call_func><name>generateAllPossibleStates</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>2</local>
      <local>0</local>
      <char>'x'</char>
      <call_func><name>setValuesForAllStates</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>1</local>
      <local>2</local>
      <newpair/>
      <assign_do/>
      <local>4</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>generateAllPossibleStates</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <call_func><name>allocateNewBoard</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <call_func><name>convertFromBoardToState</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>2</local>
      <char>'x'</char>
      <call_func><name>generateNextStates</name><nargs>2</nargs></call_func>
      <assign_do/>
      <local>2</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>convertFromBoardToState</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <call_func><name>generateEmptyPointerBoard</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>0</local>
      <local>1</local>
      <newpair/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>2</local>
      <num>0</num>
      <newpair/>
      <assign_do/>
      <local>3</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>generateEmptyPointerBoard</name>
    <args/>
    <body>
      <addr_local>0</addr_local>
      <call_func><name>generateEmptyPointerRow</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>1</addr_local>
      <call_func><name>generateEmptyPointerRow</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>2</addr_local>
      <call_func><name>generateEmptyPointerRow</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>0</local>
      <local>1</local>
      <newpair/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>3</local>
      <local>2</local>
      <newpair/>
      <assign_do/>
      <local>4</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>generateEmptyPointerRow</name>
    <args/>
    <body>
      <addr_local>0</addr_local>
      <null/>
      <null/>
      <newpair/>
      <assign_do/>
      <addr_local>1</addr_local>
      <local>0</local>
      <null/>
      <newpair/>
      <assign_do/>
      <local>1</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>generateNextStates</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>2</local>
      <fst/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>2</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>1</local>
      <call_func><name>oppositeSymbol</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>3</local>
      <local>5</local>
      <call_func><name>hasWon</name><nargs>2</nargs></call_func>
      <assign_do/>
      <if>
        <cond><local>6</local></cond>
        <when><local>0</local><return/></when>
        <else>
          <addr_local>7</addr_local>
          <local>3</local>
          <local>4</local>
          <local>1</local>
          <call_func><name>generateNextStatesBoard</name><nargs>3</nargs></call_func>
          <assign_do/>
          <local>0</local>
          <return/>
        </else>
      </if>
    </body>
  </fn>
  <fn>
    <name>generateNextStatesBoard</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <addr_local>3</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>3</local>
      <fst/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <snd/>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>8</addr_local>
      <local>7</local>
      <fst/>
      <assign_do/>
      <addr_local>9</addr_local>
      <local>7</local>
      <snd/>
      <assign_do/>
      <addr_local>10</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>11</addr_local>
      <local>0</local>
      <local>4</local>
      <local>8</local>
      <local>2</local>
      <num>1</num>
      <call_func><name>generateNextStatesRow</name><nargs>5</nargs></call_func>
      <assign_do/>
      <addr_local>11</addr_local>
      <local>0</local>
      <local>5</local>
      <local>9</local>
      <local>2</local>
      <num>2</num>
      <call_func><name>generateNextStatesRow</name><nargs>5</nargs></call_func>
      <assign_do/>
      <addr_local>11</addr_local>
      <local>0</local>
      <local>6</local>
      <local>10</local>
      <local>2</local>
      <num>3</num>
      <call_func><name>generateNextStatesRow</name><nargs>5</nargs></call_func>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>generateNextStatesRow</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg><arg>3</arg><arg>4</arg></args>
    <body>
      <addr_local>5</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>5</local>
      <fst/>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>5</local>
      <snd/>
      <assign_do/>
      <addr_local>8</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>9</addr_local>
      <local>2</local>
      <fst/>
      <assign_do/>
      <addr_local>9</addr_local>
      <addr_fst/>
      <local>0</local>
      <local>6</local>
      <local>3</local>
      <local>4</local>
      <num>1</num>
      <call_func><name>generateNextStatesCell</name><nargs>5</nargs></call_func>
      <assign_do/>
      <addr_local>9</addr_local>
      <addr_snd/>
      <local>0</local>
      <local>7</local>
      <local>3</local>
      <local>4</local>
      <num>2</num>
      <call_func><name>generateNextStatesCell</name><nargs>5</nargs></call_func>
      <assign_do/>
      <addr_local>2</addr_local>
      <addr_snd/>
      <local>0</local>
      <local>8</local>
      <local>3</local>
      <local>4</local>
      <num>3</num>
      <call_func><name>generateNextStatesCell</name><nargs>5</nargs></call_func>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>generateNextStatesCell</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg><arg>3</arg><arg>4</arg></args>
    <body>
      <if>
        <cond><local>1</local><char>'\0'</char><op>eq</op></cond>
        <when>
          <addr_local>5</addr_local>
          <local>0</local>
          <call_func><name>cloneBoard</name><nargs>1</nargs></call_func>
          <assign_do/>
          <addr_local>6</addr_local>
          <local>5</local>
          <local>2</local>
          <local>3</local>
          <local>4</local>
          <call_func><name>placeMove</name><nargs>4</nargs></call_func>
          <assign_do/>
          <addr_local>7</addr_local>
          <local>5</local>
          <call_func><name>convertFromBoardToState</name><nargs>1</nargs></call_func>
          <assign_do/>
          <addr_local>8</addr_local>
          <local>2</local>
          <call_func><name>oppositeSymbol</name><nargs>1</nargs></call_func>
          <assign_do/>
          <addr_local>7</addr_local>
          <local>7</local>
          <local>8</local>
          <call_func><name>generateNextStates</name><nargs>2</nargs></call_func>
          <assign_do/>
          <local>7</local>
          <return/>
        </when>
        <else><null/><return/></else>
      </if>
    </body>
  </fn>
  <fn>
    <name>cloneBoard</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <call_func><name>allocateNewBoard</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>0</local>
      <local>1</local>
      <call_func><name>copyBoard</name><nargs>2</nargs></call_func>
      <assign_do/>
      <local>1</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>copyBoard</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>2</local>
      <fst/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>2</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>6</local>
      <fst/>
      <assign_do/>
      <addr_local>8</addr_local>
      <local>6</local>
      <snd/>
      <assign_do/>
      <addr_local>9</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>10</addr_local>
      <local>3</local>
      <local>7</local>
      <call_func><name>copyRow</name><nargs>2</nargs></call_func>
      <assign_do/>
      <addr_local>10</addr_local>
      <local>4</local>
      <local>8</local>
      <call_func><name>copyRow</name><nargs>2</nargs></call_func>
      <assign_do/>
      <addr_local>10</addr_local>
      <local>5</local>
      <local>9</local>
      <call_func><name>copyRow</name><nargs>2</nargs></call_func>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>copyRow</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <addr_fst/>
      <local>2</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <addr_snd/>
      <local>2</local>
      <snd/>
      <assign_do/>
      <addr_local>1</addr_local>
      <addr_snd/>
      <local>0</local>
      <snd/>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>setValuesForAllStates</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <addr_local>3</addr_local>
      <num>0</num>
      <assign_do/>
      <if>
        <cond><local>0</local><null/><op>eq</op></cond>
        <when>
          <if>
            <cond><local>2</local><local>1</local><op>eq</op></cond>
            <when><addr_local>3</addr_local><num>101</num><assign_do/></when>
            <else><addr_local>3</addr_local><num>101</num><neg/><assign_do/></else>
          </if>
        </when>
        <else>
          <addr_local>4</addr_local>
          <local>0</local>
          <fst/>
          <assign_do/>
          <addr_local>5</addr_local>
          <local>4</local>
          <fst/>
          <assign_do/>
          <addr_local>6</addr_local>
          <local>4</local>
          <snd/>
          <assign_do/>
          <addr_local>7</addr_local>
          <local>2</local>
          <call_func><name>oppositeSymbol</name><nargs>1</nargs></call_func>
          <assign_do/>
          <addr_local>8</addr_local>
          <local>5</local>
          <local>7</local>
          <call_func><name>hasWon</name><nargs>2</nargs></call_func>
          <assign_do/>
          <if>
            <cond><local>8</local></cond>
            <when>
              <if>
                <cond><local>7</local><local>1</local><op>eq</op></cond>
                <when><addr_local>3</addr_local><num>100</num><assign_do/></when>
                <else><addr_local>3</addr_local><num>100</num><neg/><assign_do/></else>
              </if>
            </when>
            <else>
              <addr_local>9</addr_local>
              <local>5</local>
              <call_func><name>containEmptyCell</name><nargs>1</nargs></call_func>
              <assign_do/>
              <if>
                <cond><local>9</local></cond>
                <when>
                  <addr_local>3</addr_local>
                  <local>6</local>
                  <local>1</local>
                  <local>7</local>
                  <call_func><name>calculateValuesFromNextStates</name><nargs>3</nargs></call_func>
                  <assign_do/>
                  <if>
                    <cond><local>3</local><num>100</num><op>eq</op></cond>
                    <when><addr_local>3</addr_local><num>90</num><assign_do/></when>
                    <else/>
                  </if>
                </when>
                <else><addr_local>3</addr_local><num>0</num><assign_do/></else>
              </if>
            </else>
          </if>
          <addr_local>0</addr_local>
          <addr_snd/>
          <local>3</local>
          <assign_do/>
        </else>
      </if>
      <local>3</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>calculateValuesFromNextStates</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <addr_local>3</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>3</local>
      <fst/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <snd/>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>4</local>
      <local>1</local>
      <local>2</local>
      <call_func><name>calculateValuesFromNextStatesRow</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>8</addr_local>
      <local>5</local>
      <local>1</local>
      <local>2</local>
      <call_func><name>calculateValuesFromNextStatesRow</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>9</addr_local>
      <local>6</local>
      <local>1</local>
      <local>2</local>
      <call_func><name>calculateValuesFromNextStatesRow</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>10</addr_local>
      <local>1</local>
      <local>2</local>
      <local>7</local>
      <local>8</local>
      <local>9</local>
      <call_func><name>combineValue</name><nargs>5</nargs></call_func>
      <assign_do/>
      <local>10</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>calculateValuesFromNextStatesRow</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <addr_local>3</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>3</local>
      <fst/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <snd/>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>4</local>
      <local>1</local>
      <local>2</local>
      <call_func><name>setValuesForAllStates</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>8</addr_local>
      <local>5</local>
      <local>1</local>
      <local>2</local>
      <call_func><name>setValuesForAllStates</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>9</addr_local>
      <local>6</local>
      <local>1</local>
      <local>2</local>
      <call_func><name>setValuesForAllStates</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>10</addr_local>
      <local>1</local>
      <local>2</local>
      <local>7</local>
      <local>8</local>
      <local>9</local>
      <call_func><name>combineValue</name><nargs>5</nargs></call_func>
      <assign_do/>
      <local>10</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>combineValue</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg><arg>3</arg><arg>4</arg></args>
    <body>
      <addr_local>5</addr_local>
      <num>0</num>
      <assign_do/>
      <if>
        <cond><local>0</local><local>1</local><op>eq</op></cond>
        <when>
          <addr_local>5</addr_local>
          <local>2</local>
          <local>3</local>
          <local>4</local>
          <call_func><name>min3</name><nargs>3</nargs></call_func>
          <assign_do/>
        </when>
        <else>
          <addr_local>5</addr_local>
          <local>2</local>
          <local>3</local>
          <local>4</local>
          <call_func><name>max3</name><nargs>3</nargs></call_func>
          <assign_do/>
        </else>
      </if>
      <local>5</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>min3</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <if>
        <cond><local>0</local><local>1</local><op>lt</op></cond>
        <when>
          <if>
            <cond><local>0</local><local>2</local><op>lt</op></cond>
            <when><local>0</local><return/></when>
            <else><local>2</local><return/></else>
          </if>
        </when>
        <else>
          <if>
            <cond><local>1</local><local>2</local><op>lt</op></cond>
            <when><local>1</local><return/></when>
            <else><local>2</local><return/></else>
          </if>
        </else>
      </if>
    </body>
  </fn>
  <fn>
    <name>max3</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <if>
        <cond><local>0</local><local>1</local><op>gt</op></cond>
        <when>
          <if>
            <cond><local>0</local><local>2</local><op>gt</op></cond>
            <when><local>0</local><return/></when>
            <else><local>2</local><return/></else>
          </if>
        </when>
        <else>
          <if>
            <cond><local>1</local><local>2</local><op>gt</op></cond>
            <when><local>1</local><return/></when>
            <else><local>2</local><return/></else>
          </if>
        </else>
      </if>
    </body>
  </fn>
  <fn>
    <name>destroyAI</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>2</local>
      <call_func><name>deleteStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <local>1</local>
      <free/>
      <local>0</local>
      <free/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>askForAMoveAI</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg><arg>3</arg><arg>4</arg></args>
    <body>
      <addr_local>5</addr_local>
      <local>3</local>
      <fst/>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>3</local>
      <snd/>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>6</local>
      <fst/>
      <assign_do/>
      <addr_local>8</addr_local>
      <local>7</local>
      <snd/>
      <assign_do/>
      <addr_local>9</addr_local>
      <local>6</local>
      <snd/>
      <assign_do/>
      <addr_local>10</addr_local>
      <local>8</local>
      <local>9</local>
      <local>4</local>
      <call_func><name>findTheBestMove</name><nargs>3</nargs></call_func>
      <assign_do/>
      <str>"AI is cleaning up its memory..."</str>
      <print><kind>str</kind><newline>true</newline></print>
      <addr_local>3</addr_local>
      <addr_snd/>
      <local>8</local>
      <local>4</local>
      <num>0</num>
      <array_elem/>
      <local>4</local>
      <num>1</num>
      <array_elem/>
      <call_func><name>deleteAllOtherChildren</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>10</addr_local>
      <local>6</local>
      <call_func><name>deleteThisStateOnly</name><nargs>1</nargs></call_func>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>findTheBestMove</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <if>
        <cond><local>1</local><num>90</num><op>eq</op></cond>
        <when>
          <addr_local>3</addr_local>
          <local>0</local>
          <num>100</num>
          <local>2</local>
          <call_func><name>findMoveWithGivenValue</name><nargs>3</nargs></call_func>
          <assign_do/>
          <if><cond><local>3</local></cond><when><true/><return/></when><else/></if>
        </when>
        <else/>
      </if>
      <addr_local>3</addr_local>
      <local>0</local>
      <local>1</local>
      <local>2</local>
      <call_func><name>findMoveWithGivenValue</name><nargs>3</nargs></call_func>
      <assign_do/>
      <if>
        <cond><local>3</local></cond>
        <when><true/><return/></when>
        <else>
          <str>"Internal Error: cannot find the next move for the AI"</str>
          <print><kind>str</kind><newline>true</newline></print>
          <num>1</num>
          <neg/>
          <exit/>
        </else>
      </if>
    </body>
  </fn>
  <fn>
    <name>findMoveWithGivenValue</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <addr_local>3</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>3</local>
      <fst/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <snd/>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>4</local>
      <local>1</local>
      <local>2</local>
      <call_func><name>findMoveWithGivenValueRow</name><nargs>3</nargs></call_func>
      <assign_do/>
      <if>
        <cond><local>7</local></cond>
        <when>
          <addr_local>2</addr_local>
          <num>0</num>
          <addr_array/>
          <num>1</num>
          <assign_do/>
        </when>
        <else>
          <addr_local>7</addr_local>
          <local>5</local>
          <local>1</local>
          <local>2</local>
          <call_func><name>findMoveWithGivenValueRow</name><nargs>3</nargs></call_func>
          <assign_do/>
          <if>
            <cond><local>7</local></cond>
            <when>
              <addr_local>2</addr_local>
              <num>0</num>
              <addr_array/>
              <num>2</num>
              <assign_do/>
            </when>
            <else>
              <addr_local>7</addr_local>
              <local>6</local>
              <local>1</local>
              <local>2</local>
              <call_func><name>findMoveWithGivenValueRow</name><nargs>3</nargs></call_func>
              <assign_do/>
              <if>
                <cond><local>7</local></cond>
                <when>
                  <addr_local>2</addr_local>
                  <num>0</num>
                  <addr_array/>
                  <num>3</num>
                  <assign_do/>
                </when>
                <else><false/><return/></else>
              </if>
            </else>
          </if>
        </else>
      </if>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>findMoveWithGivenValueRow</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <addr_local>3</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>3</local>
      <fst/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <snd/>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>4</local>
      <local>1</local>
      <call_func><name>hasGivenStateValue</name><nargs>2</nargs></call_func>
      <assign_do/>
      <if>
        <cond><local>7</local></cond>
        <when>
          <addr_local>2</addr_local>
          <num>1</num>
          <addr_array/>
          <num>1</num>
          <assign_do/>
        </when>
        <else>
          <addr_local>7</addr_local>
          <local>5</local>
          <local>1</local>
          <call_func><name>hasGivenStateValue</name><nargs>2</nargs></call_func>
          <assign_do/>
          <if>
            <cond><local>7</local></cond>
            <when>
              <addr_local>2</addr_local>
              <num>1</num>
              <addr_array/>
              <num>2</num>
              <assign_do/>
            </when>
            <else>
              <addr_local>7</addr_local>
              <local>6</local>
              <local>1</local>
              <call_func><name>hasGivenStateValue</name><nargs>2</nargs></call_func>
              <assign_do/>
              <if>
                <cond><local>7</local></cond>
                <when>
                  <addr_local>2</addr_local>
                  <num>1</num>
                  <addr_array/>
                  <num>3</num>
                  <assign_do/>
                </when>
                <else><false/><return/></else>
              </if>
            </else>
          </if>
        </else>
      </if>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>hasGivenStateValue</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <if>
        <cond><local>0</local><null/><op>eq</op></cond>
        <when><false/><return/></when>
        <else>
          <addr_local>2</addr_local>
          <local>0</local>
          <snd/>
          <assign_do/>
          <local>2</local>
          <local>1</local>
          <op>eq</op>
          <return/>
        </else>
      </if>
    </body>
  </fn>
  <fn>
    <name>notifyMoveAI</name>
    <args>
      <arg>0</arg>
      <arg>1</arg>
      <arg>2</arg>
      <arg>3</arg>
      <arg>4</arg>
      <arg>5</arg>
    </args>
    <body>
      <addr_local>6</addr_local>
      <local>3</local>
      <snd/>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>6</local>
      <fst/>
      <assign_do/>
      <addr_local>8</addr_local>
      <local>7</local>
      <snd/>
      <assign_do/>
      <str>"AI is cleaning up its memory..."</str>
      <print><kind>str</kind><newline>true</newline></print>
      <addr_local>3</addr_local>
      <addr_snd/>
      <local>8</local>
      <local>4</local>
      <local>5</local>
      <call_func><name>deleteAllOtherChildren</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>9</addr_local>
      <local>6</local>
      <call_func><name>deleteThisStateOnly</name><nargs>1</nargs></call_func>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>deleteAllOtherChildren</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <addr_local>3</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>3</local>
      <fst/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <snd/>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>7</addr_local>
      <null/>
      <assign_do/>
      <addr_local>8</addr_local>
      <null/>
      <assign_do/>
      <addr_local>9</addr_local>
      <null/>
      <assign_do/>
      <if>
        <cond><local>1</local><num>1</num><op>eq</op></cond>
        <when>
          <addr_local>7</addr_local>
          <local>4</local>
          <assign_do/>
          <addr_local>8</addr_local>
          <local>5</local>
          <assign_do/>
          <addr_local>9</addr_local>
          <local>6</local>
          <assign_do/>
        </when>
        <else>
          <addr_local>8</addr_local>
          <local>4</local>
          <assign_do/>
          <if>
            <cond><local>1</local><num>2</num><op>eq</op></cond>
            <when>
              <addr_local>7</addr_local>
              <local>5</local>
              <assign_do/>
              <addr_local>9</addr_local>
              <local>6</local>
              <assign_do/>
            </when>
            <else>
              <addr_local>7</addr_local>
              <local>6</local>
              <assign_do/>
              <addr_local>9</addr_local>
              <local>5</local>
              <assign_do/>
            </else>
          </if>
        </else>
      </if>
      <addr_local>10</addr_local>
      <local>7</local>
      <local>2</local>
      <call_func><name>deleteAllOtherChildrenRow</name><nargs>2</nargs></call_func>
      <assign_do/>
      <addr_local>11</addr_local>
      <local>8</local>
      <call_func><name>deleteChildrenStateRecursivelyRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>11</addr_local>
      <local>9</local>
      <call_func><name>deleteChildrenStateRecursivelyRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <local>10</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>deleteAllOtherChildrenRow</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>2</local>
      <fst/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>2</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>6</addr_local>
      <null/>
      <assign_do/>
      <addr_local>7</addr_local>
      <null/>
      <assign_do/>
      <addr_local>8</addr_local>
      <null/>
      <assign_do/>
      <if>
        <cond><local>1</local><num>1</num><op>eq</op></cond>
        <when>
          <addr_local>6</addr_local>
          <local>3</local>
          <assign_do/>
          <addr_local>7</addr_local>
          <local>4</local>
          <assign_do/>
          <addr_local>8</addr_local>
          <local>5</local>
          <assign_do/>
        </when>
        <else>
          <addr_local>7</addr_local>
          <local>3</local>
          <assign_do/>
          <if>
            <cond><local>1</local><num>2</num><op>eq</op></cond>
            <when>
              <addr_local>6</addr_local>
              <local>4</local>
              <assign_do/>
              <addr_local>8</addr_local>
              <local>5</local>
              <assign_do/>
            </when>
            <else>
              <addr_local>6</addr_local>
              <local>5</local>
              <assign_do/>
              <addr_local>8</addr_local>
              <local>4</local>
              <assign_do/>
            </else>
          </if>
        </else>
      </if>
      <addr_local>9</addr_local>
      <local>7</local>
      <call_func><name>deleteStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>9</addr_local>
      <local>8</local>
      <call_func><name>deleteStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <local>6</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>deleteStateTreeRecursively</name>
    <args><arg>0</arg></args>
    <body>
      <if>
        <cond><local>0</local><null/><op>eq</op></cond>
        <when><true/><return/></when>
        <else>
          <addr_local>1</addr_local>
          <local>0</local>
          <fst/>
          <assign_do/>
          <addr_local>2</addr_local>
          <local>1</local>
          <fst/>
          <assign_do/>
          <addr_local>3</addr_local>
          <local>1</local>
          <snd/>
          <assign_do/>
          <addr_local>4</addr_local>
          <local>3</local>
          <call_func><name>deleteChildrenStateRecursively</name><nargs>1</nargs></call_func>
          <assign_do/>
          <addr_local>4</addr_local>
          <local>0</local>
          <call_func><name>deleteThisStateOnly</name><nargs>1</nargs></call_func>
          <assign_do/>
          <true/>
          <return/>
        </else>
      </if>
    </body>
  </fn>
  <fn>
    <name>deleteThisStateOnly</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>2</local>
      <call_func><name>freeBoard</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>3</local>
      <call_func><name>freePointers</name><nargs>1</nargs></call_func>
      <assign_do/>
      <local>1</local>
      <free/>
      <local>0</local>
      <free/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>freePointers</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>2</local>
      <call_func><name>freePointersRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <call_func><name>freePointersRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>4</local>
      <call_func><name>freePointersRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <local>1</local>
      <free/>
      <local>0</local>
      <free/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>freePointersRow</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <local>1</local>
      <free/>
      <local>0</local>
      <free/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>deleteChildrenStateRecursively</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>2</local>
      <call_func><name>deleteChildrenStateRecursivelyRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <call_func><name>deleteChildrenStateRecursivelyRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>4</local>
      <call_func><name>deleteChildrenStateRecursivelyRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>deleteChildrenStateRecursivelyRow</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>2</local>
      <call_func><name>deleteStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <call_func><name>deleteStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>4</local>
      <call_func><name>deleteStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>askForAMove</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg><arg>3</arg><arg>4</arg></args>
    <body>
      <if>
        <cond><local>1</local><local>2</local><op>eq</op></cond>
        <when>
          <addr_local>5</addr_local>
          <local>0</local>
          <local>4</local>
          <call_func><name>askForAMoveHuman</name><nargs>2</nargs></call_func>
          <assign_do/>
        </when>
        <else>
          <addr_local>5</addr_local>
          <local>0</local>
          <local>1</local>
          <local>2</local>
          <local>3</local>
          <local>4</local>
          <call_func><name>askForAMoveAI</name><nargs>5</nargs></call_func>
          <assign_do/>
        </else>
      </if>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>placeMove</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg><arg>3</arg></args>
    <body>
      <addr_local>4</addr_local>
      <null/>
      <assign_do/>
      <if>
        <cond><local>2</local><num>2</num><op>le</op></cond>
        <when>
          <addr_local>5</addr_local>
          <local>0</local>
          <fst/>
          <assign_do/>
          <if>
            <cond><local>2</local><num>1</num><op>eq</op></cond>
            <when><addr_local>4</addr_local><local>5</local><fst/><assign_do/></when>
            <else><addr_local>4</addr_local><local>5</local><snd/><assign_do/></else>
          </if>
        </when>
        <else><addr_local>4</addr_local><local>0</local><snd/><assign_do/></else>
      </if>
      <if>
        <cond><local>3</local><num>2</num><op>le</op></cond>
        <when>
          <addr_local>5</addr_local>
          <local>4</local>
          <fst/>
          <assign_do/>
          <if>
            <cond><local>3</local><num>1</num><op>eq</op></cond>
            <when><addr_local>5</addr_local><addr_fst/><local>1</local><assign_do/></when>
            <else><addr_local>5</addr_local><addr_snd/><local>1</local><assign_do/></else>
          </if>
        </when>
        <else><addr_local>4</addr_local><addr_snd/><local>1</local><assign_do/></else>
      </if>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>notifyMove</name>
    <args>
      <arg>0</arg>
      <arg>1</arg>
      <arg>2</arg>
      <arg>3</arg>
      <arg>4</arg>
      <arg>5</arg>
    </args>
    <body>
      <if>
        <cond><local>1</local><local>2</local><op>eq</op></cond>
        <when>
          <addr_local>6</addr_local>
          <local>0</local>
          <local>1</local>
          <local>2</local>
          <local>3</local>
          <local>4</local>
          <local>5</local>
          <call_func><name>notifyMoveAI</name><nargs>6</nargs></call_func>
          <assign_do/>
        </when>
        <else>
          <addr_local>6</addr_local>
          <local>0</local>
          <local>1</local>
          <local>2</local>
          <local>4</local>
          <local>5</local>
          <call_func><name>notifyMoveHuman</name><nargs>5</nargs></call_func>
          <assign_do/>
        </else>
      </if>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>oppositeSymbol</name>
    <args><arg>0</arg></args>
    <body>
      <if>
        <cond><local>0</local><char>'x'</char><op>eq</op></cond>
        <when><char>'o'</char><return/></when>
        <else>
          <if>
            <cond><local>0</local><char>'o'</char><op>eq</op></cond>
            <when><char>'x'</char><return/></when>
            <else>
              <str>"Internal Error: symbol given is neither \'x\' or \'o\'"</str>
              <print><kind>str</kind><newline>true</newline></print>
              <num>1</num>
              <neg/>
              <exit/>
            </else>
          </if>
        </else>
      </if>
    </body>
  </fn>
  <fn>
    <name>symbolAt</name>
    <args><arg>0</arg><arg>1</arg><arg>2</arg></args>
    <body>
      <addr_local>3</addr_local>
      <null/>
      <assign_do/>
      <if>
        <cond><local>1</local><num>2</num><op>le</op></cond>
        <when>
          <addr_local>4</addr_local>
          <local>0</local>
          <fst/>
          <assign_do/>
          <if>
            <cond><local>1</local><num>1</num><op>eq</op></cond>
            <when><addr_local>3</addr_local><local>4</local><fst/><assign_do/></when>
            <else><addr_local>3</addr_local><local>4</local><snd/><assign_do/></else>
          </if>
        </when>
        <else><addr_local>3</addr_local><local>0</local><snd/><assign_do/></else>
      </if>
      <addr_local>4</addr_local>
      <char>'\0'</char>
      <assign_do/>
      <if>
        <cond><local>2</local><num>2</num><op>le</op></cond>
        <when>
          <addr_local>5</addr_local>
          <local>3</local>
          <fst/>
          <assign_do/>
          <if>
            <cond><local>2</local><num>1</num><op>eq</op></cond>
            <when><addr_local>4</addr_local><local>5</local><fst/><assign_do/></when>
            <else><addr_local>4</addr_local><local>5</local><snd/><assign_do/></else>
          </if>
        </when>
        <else><addr_local>4</addr_local><local>3</local><snd/><assign_do/></else>
      </if>
      <local>4</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>containEmptyCell</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>2</local>
      <call_func><name>containEmptyCellRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>3</local>
      <call_func><name>containEmptyCellRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>4</local>
      <call_func><name>containEmptyCellRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <local>5</local>
      <local>6</local>
      <op>or</op>
      <local>7</local>
      <op>or</op>
      <return/>
    </body>
  </fn>
  <fn>
    <name>containEmptyCellRow</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <local>2</local>
      <char>'\0'</char>
      <op>eq</op>
      <local>3</local>
      <char>'\0'</char>
      <op>eq</op>
      <op>or</op>
      <local>4</local>
      <char>'\0'</char>
      <op>eq</op>
      <op>or</op>
      <return/>
    </body>
  </fn>
  <fn>
    <name>hasWon</name>
    <args><arg>0</arg><arg>1</arg></args>
    <body>
      <addr_local>2</addr_local>
      <local>0</local>
      <num>1</num>
      <num>1</num>
      <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>0</local>
      <num>1</num>
      <num>2</num>
      <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <num>1</num>
      <num>3</num>
      <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>0</local>
      <num>2</num>
      <num>1</num>
      <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>6</addr_local>
      <local>0</local>
      <num>2</num>
      <num>2</num>
      <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>7</addr_local>
      <local>0</local>
      <num>2</num>
      <num>3</num>
      <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>8</addr_local>
      <local>0</local>
      <num>3</num>
      <num>1</num>
      <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>9</addr_local>
      <local>0</local>
      <num>3</num>
      <num>2</num>
      <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
      <assign_do/>
      <addr_local>10</addr_local>
      <local>0</local>
      <num>3</num>
      <num>3</num>
      <call_func><name>symbolAt</name><nargs>3</nargs></call_func>
      <assign_do/>
      <local>2</local>
      <local>1</local>
      <op>eq</op>
      <local>3</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <local>4</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <local>5</local>
      <local>1</local>
      <op>eq</op>
      <local>6</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <local>7</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <op>or</op>
      <local>8</local>
      <local>1</local>
      <op>eq</op>
      <local>9</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <local>10</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <op>or</op>
      <local>2</local>
      <local>1</local>
      <op>eq</op>
      <local>5</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <local>8</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <op>or</op>
      <local>3</local>
      <local>1</local>
      <op>eq</op>
      <local>6</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <local>9</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <op>or</op>
      <local>4</local>
      <local>1</local>
      <op>eq</op>
      <local>7</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <local>10</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <op>or</op>
      <local>2</local>
      <local>1</local>
      <op>eq</op>
      <local>6</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <local>10</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <op>or</op>
      <local>4</local>
      <local>1</local>
      <op>eq</op>
      <local>6</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <local>8</local>
      <local>1</local>
      <op>eq</op>
      <op>and</op>
      <op>or</op>
      <return/>
    </body>
  </fn>
  <fn>
    <name>allocateNewBoard</name>
    <args/>
    <body>
      <addr_local>0</addr_local>
      <call_func><name>allocateNewRow</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>1</addr_local>
      <call_func><name>allocateNewRow</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>2</addr_local>
      <call_func><name>allocateNewRow</name><nargs>0</nargs></call_func>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>0</local>
      <local>1</local>
      <newpair/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>3</local>
      <local>2</local>
      <newpair/>
      <assign_do/>
      <local>4</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>allocateNewRow</name>
    <args/>
    <body>
      <addr_local>0</addr_local>
      <char>'\0'</char>
      <char>'\0'</char>
      <newpair/>
      <assign_do/>
      <addr_local>1</addr_local>
      <local>0</local>
      <char>'\0'</char>
      <newpair/>
      <assign_do/>
      <local>1</local>
      <return/>
    </body>
  </fn>
  <fn>
    <name>freeBoard</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>2</local>
      <call_func><name>freeRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <call_func><name>freeRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>4</local>
      <call_func><name>freeRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <local>1</local>
      <free/>
      <local>0</local>
      <free/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>freeRow</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <local>1</local>
      <free/>
      <local>0</local>
      <free/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>printAiData</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>2</local>
      <call_func><name>printStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <num>0</num>
      <exit/>
    </body>
  </fn>
  <fn>
    <name>printStateTreeRecursively</name>
    <args><arg>0</arg></args>
    <body>
      <if>
        <cond><local>0</local><null/><op>eq</op></cond>
        <when><true/><return/></when>
        <else>
          <addr_local>1</addr_local>
          <local>0</local>
          <fst/>
          <assign_do/>
          <addr_local>2</addr_local>
          <local>1</local>
          <fst/>
          <assign_do/>
          <addr_local>3</addr_local>
          <local>1</local>
          <snd/>
          <assign_do/>
          <addr_local>4</addr_local>
          <local>0</local>
          <snd/>
          <assign_do/>
          <char>'v'</char>
          <print><kind>char</kind><newline>false</newline></print>
          <char>'='</char>
          <print><kind>char</kind><newline>false</newline></print>
          <local>4</local>
          <print><kind>i32</kind><newline>true</newline></print>
          <addr_local>5</addr_local>
          <local>2</local>
          <call_func><name>printBoard</name><nargs>1</nargs></call_func>
          <assign_do/>
          <addr_local>5</addr_local>
          <local>3</local>
          <call_func><name>printChildrenStateTree</name><nargs>1</nargs></call_func>
          <assign_do/>
          <char>'p'</char>
          <print><kind>char</kind><newline>true</newline></print>
          <true/>
          <return/>
        </else>
      </if>
    </body>
  </fn>
  <fn>
    <name>printChildrenStateTree</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>2</local>
      <call_func><name>printChildrenStateTreeRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <call_func><name>printChildrenStateTreeRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>4</local>
      <call_func><name>printChildrenStateTreeRow</name><nargs>1</nargs></call_func>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <fn>
    <name>printChildrenStateTreeRow</name>
    <args><arg>0</arg></args>
    <body>
      <addr_local>1</addr_local>
      <local>0</local>
      <fst/>
      <assign_do/>
      <addr_local>2</addr_local>
      <local>1</local>
      <fst/>
      <assign_do/>
      <addr_local>3</addr_local>
      <local>1</local>
      <snd/>
      <assign_do/>
      <addr_local>4</addr_local>
      <local>0</local>
      <snd/>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>2</local>
      <call_func><name>printStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>3</local>
      <call_func><name>printStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <addr_local>5</addr_local>
      <local>4</local>
      <call_func><name>printStateTreeRecursively</name><nargs>1</nargs></call_func>
      <assign_do/>
      <true/>
      <return/>
    </body>
  </fn>
  <main>
    <addr_local>0</addr_local>
    <call_func><name>chooseSymbol</name><nargs>0</nargs></call_func>
    <assign_do/>
    <addr_local>1</addr_local>
    <local>0</local>
    <call_func><name>oppositeSymbol</name><nargs>1</nargs></call_func>
    <assign_do/>
    <addr_local>2</addr_local>
    <char>'x'</char>
    <assign_do/>
    <addr_local>3</addr_local>
    <call_func><name>allocateNewBoard</name><nargs>0</nargs></call_func>
    <assign_do/>
    <str>"Initialising AI. Please wait, this may take a few minutes."</str>
    <print><kind>str</kind><newline>true</newline></print>
    <addr_local>4</addr_local>
    <local>1</local>
    <call_func><name>initAI</name><nargs>1</nargs></call_func>
    <assign_do/>
    <addr_local>5</addr_local>
    <num>0</num>
    <assign_do/>
    <addr_local>6</addr_local>
    <char>'\0'</char>
    <assign_do/>
    <addr_local>7</addr_local>
    <local>3</local>
    <call_func><name>printBoard</name><nargs>1</nargs></call_func>
    <assign_do/>
    <while>
      <cond>
        <local>6</local>
        <char>'\0'</char>
        <op>eq</op>
        <local>5</local>
        <num>9</num>
        <op>lt</op>
        <op>and</op>
      </cond>
      <body>
        <addr_local>8</addr_local>
        <num>0</num>
        <num>0</num>
        <array_lit>2</array_lit>
        <assign_do/>
        <addr_local>7</addr_local>
        <local>3</local>
        <local>2</local>
        <local>0</local>
        <local>4</local>
        <local>8</local>
        <call_func><name>askForAMove</name><nargs>5</nargs></call_func>
        <assign_do/>
        <addr_local>7</addr_local>
        <local>3</local>
        <local>2</local>
        <local>8</local>
        <num>0</num>
        <array_elem/>
        <local>8</local>
        <num>1</num>
        <array_elem/>
        <call_func><name>placeMove</name><nargs>4</nargs></call_func>
        <assign_do/>
        <addr_local>7</addr_local>
        <local>3</local>
        <local>2</local>
        <local>0</local>
        <local>4</local>
        <local>8</local>
        <num>0</num>
        <array_elem/>
        <local>8</local>
        <num>1</num>
        <array_elem/>
        <call_func><name>notifyMove</name><nargs>6</nargs></call_func>
        <assign_do/>
        <addr_local>7</addr_local>
        <local>3</local>
        <call_func><name>printBoard</name><nargs>1</nargs></call_func>
        <assign_do/>
        <addr_local>9</addr_local>
        <local>3</local>
        <local>2</local>
        <call_func><name>hasWon</name><nargs>2</nargs></call_func>
        <assign_do/>
        <if>
          <cond><local>9</local></cond>
          <when><addr_local>6</addr_local><local>2</local><assign_do/></when>
          <else/>
        </if>
        <addr_local>2</addr_local>
        <local>2</local>
        <call_func><name>oppositeSymbol</name><nargs>1</nargs></call_func>
        <assign_do/>
        <addr_local>5</addr_local>
        <local>5</local>
        <num>1</num>
        <op>add</op>
        <assign_do/>
      </body>
    </while>
    <addr_local>7</addr_local>
    <local>3</local>
    <call_func><name>freeBoard</name><nargs>1</nargs></call_func>
    <assign_do/>
    <addr_local>7</addr_local>
    <local>4</local>
    <call_func><name>destroyAI</name><nargs>1</nargs></call_func>
    <assign_do/>
    <if>
      <cond><local>6</local><char>'\0'</char><op>ne</op></cond>
      <when>
        <local>6</local>
        <print><kind>char</kind><newline>false</newline></print>
        <str>" has won!"</str>
        <print><kind>str</kind><newline>true</newline></print>
      </when>
      <else>
        <str>"Stalemate!"</str>
        <print><kind>str</kind><newline>true</newline></print>
      </else>
    </if>
  </main>
</unit>