#ifndef UITLS_WACC_IN
#define UITLS_WACC_IN

// This can't include any other files, as everything else depends on it.

#define ENDIF else skip fi

#define INC(x) x = x + 1

// Tools funtion that semanticly returns unit
#define VOID pair(bool[][][], int[][][][])
#define RETV return null
#define ENDV RETV end

#define DISCARD VOID __nop = call
#define DISCARD_ __nop = call
#define DISCARD_INIT VOID __nop = null

#define RETVRN(__type, ...) __type __ret = __VA_ARGS__; return __ret

bool isAlpha(char c) is
  return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c == '_'
end

bool isDigit(char c) is
	return c >= '0' && c <= '9'
end

#define XXXTODO VOID __exit = call wacc_fail(__FILE__, __LINE__, "Unimplemented"); exit 1
#define FAIL    VOID __exit = call wacc_fail(__FILE__, __LINE__, "Error"); exit 1

VOID wacc_fail(string file, int line, string reason) is 
  print file;
  print ":";
  print line;
  print " ";
  print reason;
  println "";
ENDV

#endif
