#ifndef GEN_LEXER_WACC_IN
#define GEN_LEXER_WACC_IN
// struct lexer {
//     source: char[],
//     start: int,
//     current: int,
// }

// [
//     current: int
//     [
//         source: char[]
//         start: int
//     ]
// ]
#define LEXER_T pair(int, pair)

LEXER_T lexer_new(
    char[] source,
    int start,
    int current
) is
    int l__ctor = current;
    char[] lr__ctor = source;
    int rr__ctor = start;
    pair(char[], int) r__ctor = newpair(lr__ctor, rr__ctor);
    pair(int, pair) __ctor = newpair(l__ctor, r__ctor);
    return __ctor
end

#define LEXER_FN(__rtype, __fname) \
    __rtype __fname(LEXER_T self) is \
    pair(int, pair) __self = self; \
    int current = fst __self; \
    pair(char[], int) __sndself = snd __self; \
    char[] source = fst __sndself; \
    int start = snd __sndself;

#define LEXER_SET_SOURCE(__val) fst __sndself = __val; source = __val
#define LEXER_SET_START(__val) snd __sndself = __val; start = __val
#define LEXER_SET_CURRENT(__val) fst __self = __val; current = __val

#endif
