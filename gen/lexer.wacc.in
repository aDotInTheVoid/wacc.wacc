#ifndef GEN_LEXER_WACC_IN
#define GEN_LEXER_WACC_IN

#include "../src/utils.wacc.in"

// struct lexer {
//     source: char[][],
//     sentinal: char[],
//     start: int,
//     current: int,
//     logical_line: int,
// }

// [
//     [
//         logical_line: int
//         current: int
//     ]
//     [
//         sentinal: char[]
//         [
//             source: char[][]
//             start: int
//         ]
//     ]
// ]
#define LEXER_T pair(pair, pair)

LEXER_T lexer_ctor(
    char[][] source,
    char[] sentinal,
    int start,
    int current,
    int logical_line
) is
    int ll__ctor = logical_line;
    int rl__ctor = current;
    pair(int, int) l__ctor = newpair(ll__ctor, rl__ctor);
    char[] lr__ctor = sentinal;
    char[][] lrr__ctor = source;
    int rrr__ctor = start;
    pair(char[][], int) rr__ctor = newpair(lrr__ctor, rrr__ctor);
    pair(char[], pair) r__ctor = newpair(lr__ctor, rr__ctor);
    pair(pair, pair) __ctor = newpair(l__ctor, r__ctor);
    return __ctor
end

VOID lexer_dtor(LEXER_T self) is
    pair(int, int) lself = fst self;
    pair(char[], pair) rself = snd self;
    int llself = fst lself;
    int rlself = snd lself;
    free lself;
    char[] lrself = fst rself;
    pair(char[][], int) rrself = snd rself;
    char[][] lrrself = fst rrself;
    int rrrself = snd rrself;
    free rrself;
    free rself;
    free self;
    
ENDV

#define LEXER_FN(__rtype, __fname, ...) \
    __rtype __fname(LEXER_T self __VA_ARGS__) is \
    pair(pair, pair) __self = self; \
    pair(int, int) __fstself = fst __self; \
    int logical_line = fst __fstself; \
    int current = snd __fstself; \
    pair(char[], pair) __sndself = snd __self; \
    char[] sentinal = fst __sndself; \
    pair(char[][], int) __sndsndself = snd __sndself; \
    char[][] source = fst __sndsndself; \
    int start = snd __sndsndself;


#define LEXER_REFRESH \
    logical_line = fst __fstself; \
    current = snd __fstself; \
    sentinal = fst __sndself; \
    source = fst __sndsndself; \
    start = snd __sndsndself

#define LEXER_SET_SOURCE(__val) fst __sndsndself = __val; source = __val
#define LEXER_SET_SENTINAL(__val) fst __sndself = __val; sentinal = __val
#define LEXER_SET_START(__val) snd __sndsndself = __val; start = __val
#define LEXER_SET_CURRENT(__val) snd __fstself = __val; current = __val
#define LEXER_SET_LOGICAL_LINE(__val) fst __fstself = __val; logical_line = __val

#endif
