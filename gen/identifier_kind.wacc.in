#ifndef GEN_IDENTIFIER_KIND_WACC_IN
#define GEN_IDENTIFIER_KIND_WACC_IN

#include "../src/utils.wacc.in"

#include "token_type.wacc.in"

TOKEN_TYPE identifier_kind(char[] str, int start, int lenn) is
    if lenn <= 3 then
        if lenn <= 2 then
            if lenn == 2 then
                if str[start + 0] == 'f' then
                    if str[start + 0] == 'd' then
                        char[] exp = ['d', 'o'];
                        bool eq =  call streq(str, start, lenn, exp);
                        free exp;
                        if eq then return TOKEN_DO ENDIF
                    else
                        char[] exp = ['f', 'i'];
                        bool eq =  call streq(str, start, lenn, exp);
                        free exp;
                        if eq then return TOKEN_FI ENDIF
                    fi
                else
                    if str[start + 1] == 'f' then
                        char[] exp = ['i', 'f'];
                        bool eq =  call streq(str, start, lenn, exp);
                        free exp;
                        if eq then return TOKEN_IF ENDIF
                    else
                        char[] exp = ['i', 's'];
                        bool eq =  call streq(str, start, lenn, exp);
                        free exp;
                        if eq then return TOKEN_IS ENDIF
                    fi
                fi
            ENDIF
        else
            if lenn == 3 then
                if str[start + 0] == 'f' then
                    if str[start + 0] == 'c' then
                        char[] exp = ['c', 'h', 'r'];
                        bool eq =  call streq(str, start, lenn, exp);
                        free exp;
                        if eq then return TOKEN_CHR ENDIF
                    else
                        if str[start + 0] == 'e' then
                            char[] exp = ['e', 'n', 'd'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_END ENDIF
                        else
                            char[] exp = ['f', 's', 't'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_FST ENDIF
                        fi
                    fi
                else
                    if str[start + 0] == 'l' then
                        if str[start + 0] == 'i' then
                            char[] exp = ['i', 'n', 't'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_INT ENDIF
                        else
                            char[] exp = ['l', 'e', 'n'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_LEN ENDIF
                        fi
                    else
                        if str[start + 0] == 'o' then
                            char[] exp = ['o', 'r', 'd'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_ORD ENDIF
                        else
                            char[] exp = ['s', 'n', 'd'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_SND ENDIF
                        fi
                    fi
                fi
            ENDIF
        fi
    else
        if lenn <= 4 then
            if lenn == 4 then
                if str[start + 0] == 'e' then
                    if str[start + 0] == 'c' then
                        if str[start + 0] == 'b' then
                            char[] exp = ['b', 'o', 'o', 'l'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_BOOL ENDIF
                        else
                            if str[start + 1] == 'a' then
                                char[] exp = ['c', 'a', 'l', 'l'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_CALL ENDIF
                            else
                                char[] exp = ['c', 'h', 'a', 'r'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_CHAR ENDIF
                            fi
                        fi
                    else
                        if str[start + 0] == 'd' then
                            char[] exp = ['d', 'o', 'n', 'e'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_DONE ENDIF
                        else
                            if str[start + 1] == 'l' then
                                char[] exp = ['e', 'l', 's', 'e'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_ELSE ENDIF
                            else
                                char[] exp = ['e', 'x', 'i', 't'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_EXIT ENDIF
                            fi
                        fi
                    fi
                else
                    if str[start + 0] == 'p' then
                        if str[start + 0] == 'f' then
                            char[] exp = ['f', 'r', 'e', 'e'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_FREE ENDIF
                        else
                            if str[start + 0] == 'n' then
                                char[] exp = ['n', 'u', 'l', 'l'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_NULL ENDIF
                            else
                                char[] exp = ['p', 'a', 'i', 'r'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_PAIR ENDIF
                            fi
                        fi
                    else
                        if str[start + 0] == 's' then
                            if str[start + 0] == 'r' then
                                char[] exp = ['r', 'e', 'a', 'd'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_READ ENDIF
                            else
                                char[] exp = ['s', 'k', 'i', 'p'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_SKIP ENDIF
                            fi
                        else
                            if str[start + 1] == 'h' then
                                char[] exp = ['t', 'h', 'e', 'n'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_THEN ENDIF
                            else
                                char[] exp = ['t', 'r', 'u', 'e'];
                                bool eq =  call streq(str, start, lenn, exp);
                                free exp;
                                if eq then return TOKEN_TRUE ENDIF
                            fi
                        fi
                    fi
                fi
            ENDIF
        else
            if lenn <= 5 then
                if lenn == 5 then
                    if str[start + 0] == 'f' then
                        if str[start + 0] == 'b' then
                            char[] exp = ['b', 'e', 'g', 'i', 'n'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_BEGIN ENDIF
                        else
                            char[] exp = ['f', 'a', 'l', 's', 'e'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_FALSE ENDIF
                        fi
                    else
                        if str[start + 0] == 'p' then
                            char[] exp = ['p', 'r', 'i', 'n', 't'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_PRINT ENDIF
                        else
                            char[] exp = ['w', 'h', 'i', 'l', 'e'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_WHILE ENDIF
                        fi
                    fi
                ENDIF
            else
                if lenn <= 6 then
                    if lenn == 6 then
                        if str[start + 0] == 'r' then
                            char[] exp = ['r', 'e', 't', 'u', 'r', 'n'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_RETURN ENDIF
                        else
                            char[] exp = ['s', 't', 'r', 'i', 'n', 'g'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_STRING ENDIF
                        fi
                    ENDIF
                else
                    if lenn == 7 then
                        if str[start + 0] == 'n' then
                            char[] exp = ['n', 'e', 'w', 'p', 'a', 'i', 'r'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_NEWPAIR ENDIF
                        else
                            char[] exp = ['p', 'r', 'i', 'n', 't', 'l', 'n'];
                            bool eq =  call streq(str, start, lenn, exp);
                            free exp;
                            if eq then return TOKEN_PRINTLN ENDIF
                        fi
                    ENDIF
                fi
            fi
        fi
    fi ;
    return TOKEN_IDENTIFIER
end

#endif
